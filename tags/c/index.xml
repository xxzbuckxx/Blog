<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>C on Zack Traczyk</title>
    <link>https://xxzbuckxx.github.io/Blog/tags/c/</link>
    <description>Recent content in C on Zack Traczyk</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 11 May 2021 16:11:03 +0000</lastBuildDate><atom:link href="https://xxzbuckxx.github.io/Blog/tags/c/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Coding Project - Lossless File Compression</title>
      <link>https://xxzbuckxx.github.io/Blog/posts/coding-project-lossless-file-compression/</link>
      <pubDate>Tue, 11 May 2021 16:11:03 +0000</pubDate>
      
      <guid>https://xxzbuckxx.github.io/Blog/posts/coding-project-lossless-file-compression/</guid>
      <description>Lossless Static File Compression in C.</description>
      <content:encoded><![CDATA[<h2 id="concept">Concept</h2>
<p>A lossless static file compression program in <strong>C</strong> using a <strong>Huffman tree</strong> and a <strong>priority queue</strong>. This project was for a <strong>C</strong> programming lab I took in the spring quarter of my <strong>freshman year at UCSC</strong>.</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Coding Project - Sorting Algorithms</title>
      <link>https://xxzbuckxx.github.io/Blog/posts/coding-project-sorting-algorithms/</link>
      <pubDate>Sun, 19 Apr 2020 16:11:03 +0000</pubDate>
      
      <guid>https://xxzbuckxx.github.io/Blog/posts/coding-project-sorting-algorithms/</guid>
      <description>Concept An implementations of bubble sort, shell sort, quicksort with a stack, and quicksort with a queue. Additionally, a writeup analyzing the produced algorithms was made with LaTeX, a bash script, and GNU Plot.</description>
      <content:encoded><![CDATA[<h2 id="concept">Concept</h2>
<p>An implementations of bubble sort, shell sort, quicksort with a stack, and quicksort with a queue. Additionally, a writeup analyzing the produced algorithms was made with <strong>LaTeX</strong>, a <strong>bash script</strong>, and <strong>GNU Plot</strong>.</p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
